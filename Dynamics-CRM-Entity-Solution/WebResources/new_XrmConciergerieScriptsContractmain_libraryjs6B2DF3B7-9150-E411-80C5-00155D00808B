//Créateur : TM
//Date : 10/10/2014
//Fichier JS contenant les fonctionnalités permettant de gérer l'entité contrat 

//On référence les bibliothèques nécessaires
/// <reference path="../Generics/JSIHelper.js" />
/// <reference path="../Generics/global_variables.js" />

//On utilisera les namespaces pour avoir plus d'organisation dans le code
if (typeof (XrmConciergerie) == "undefined")
{ XrmConciergerie = { __namespace: true }; }
if (typeof (XrmConciergerie.Scripts) == "undefined")
{ XrmConciergerie.Scripts = { __namespace: true }; }

//On crée le namespace du fichier 
XrmConciergerie.Scripts.FormContract = {

    //Fonction qui sera appelée au chargement du formulaire
    Form_OnLoad: function () {

        //RG073
        XrmConciergerie.Scripts.FormContract.SetCountryCode();
        XrmConciergerie.Scripts.FormContract.ClearIrnterOnCreate();
        JSIHelper.GetAttribute("new_accountid").addOnChange(XrmConciergerie.Scripts.FormContract.SetCountryCode);


        //RG106
        JSIHelper.GetAttribute("new_accountid").addOnChange(XrmConciergerie.Scripts.FormContract.ClearIntermediaries);

        //RG008
        Xrm.Page.getAttribute("new_emailgroup").addOnChange(function () { XrmConciergerie.Scripts.Generics.MailValidation("new_emailgroup"); });
        Xrm.Page.getAttribute("new_emailprospection").addOnChange(function () { XrmConciergerie.Scripts.Generics.MailValidation("new_emailprospection"); });
        Xrm.Page.getAttribute("new_emailsurvey").addOnChange(function () { XrmConciergerie.Scripts.Generics.MailValidation("new_emailsurvey"); });
        Xrm.Page.getAttribute("new_emailreceiver").addOnChange(function () { XrmConciergerie.Scripts.Generics.MailValidation("new_emailreceiver"); });

        // RGI001
        JSIHelper.HackPhones();
        JSIHelper.HackPhonesGrid("telephonesassocies");

        // RG?: En fonction du type de client, on affiche/cache certains champs du header
        XrmConciergerie.Scripts.FormContract.CleanHeader();

        XrmConciergerie.Scripts.FormContract.SubgridHideButtonAdd("Contacts_distributeur_Contacts_distributeur_account_Contacts_associes");
    },



    //RG073
    //Alimente le champ code pays par le code pays du cdo 
    //Paramètre : rien
    //Retour : l'ancienne valeur avant changement de l'Etat
    SetCountryCode: function () {

        var lookupCountry = JSIHelper.GetParentLookup("new_accountid", "new_countryid");

        if (lookupCountry != null && lookupCountry.length > 0) {
            SDK.REST.retrieveRecordSync(
                lookupCountry[0].id,
                        "new_country",
                        "new_countrycode",
                        null,
                        function (result) {
                            if (result != null) {
                                JSIHelper.SetAttributeValue("new_countrycode", result.new_countrycode);
                                Xrm.Page.data.entity.save();
                            }
                        },
                        function (error) {
                        },
                        function () {
                        }
                );
        }

    },



    //RG106
    //Le filtrage est natif, ici on efface les champs intermediaires si le compte parent est effacé
    //Parametre : rien
    //Retour : rien
    ClearIntermediaries: function () {

        if (JSIHelper.GetAttribute("new_accountid").getValue() == null) {
            JSIHelper.SetAttributeValue("new_intermediary1id", null);
            JSIHelper.SetAttributeValue("new_intermediary2id", null);
        }

    },

    ClearIrnterOnCreate: function () {
        if (Xrm.Page.ui.getFormType() == FORM_TYPE_CREATE) {
            JSIHelper.SetAttributeValue("new_intermediary1id", null);
            JSIHelper.SetAttributeValue("new_intermediary2id", null);
        }
    },

    // Affiche/Cache les champs du header en fonction du type de client
    CleanHeader: function ()
    {
        // Réajuste la taille du div parent
        $(".ms-crm-HeaderTileElement ").css("width", "180px");

        $(".ms-crm-HeaderTilesWrapperElement").css("min-width", "");
    },


    // Cache le bouton "+" d'une sous-grille
    SubgridHideButtonAdd: function (gridname_)
    {
        if ($("#" + gridname_).length == 0)
        {
            setTimeout("XrmConciergerie.Scripts.FormContract.SubgridHideButtonAdd('" + gridname_ + "')", 1000);
            return;
        }
        $("#" + gridname_ + "_addImageButton").hide();
    },

    _namespace: true

}
