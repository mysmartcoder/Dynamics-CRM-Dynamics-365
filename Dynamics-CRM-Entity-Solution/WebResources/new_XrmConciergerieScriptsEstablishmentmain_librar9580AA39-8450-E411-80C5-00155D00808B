//Créateur : TM
//Date : 10/10/2014
//Fichier JS contenant les fonctionnalités permettant de gérer l'entité contact 

//On référence les bibliothèques nécessaires
/// <reference path="../Generics/JSIHelper.js" />
/// <reference path="../Generics/global_variables.js" />

//On utilisera les namespaces pour avoir plus d'organisation dans le code
if (typeof (XrmConciergerie) == "undefined")
{ XrmConciergerie = { __namespace: true }; }
if (typeof (XrmConciergerie.Scripts) == "undefined")
{ XrmConciergerie.Scripts = { __namespace: true }; }

//On crée le namespace du fichier 
XrmConciergerie.Scripts.FormEstablishment = {

    //Fonction qui sera appelé au chargement du formulaire
    Form_OnLoad: function () {


        //RG166
        XrmConciergerie.Scripts.FormEstablishment.CheckCode();
        JSIHelper.GetAttribute("new_code").addOnChange(XrmConciergerie.Scripts.FormEstablishment.CheckCode);
        Xrm.Page.data.entity.addOnSave(XrmConciergerie.Scripts.FormEstablishment.CheckCode);


        //RG084
        XrmConciergerie.Scripts.FormEstablishment.SetCDO();
        JSIHelper.GetAttribute("new_distributorid").addOnChange(XrmConciergerie.Scripts.FormEstablishment.SetCDO);
    },



    //RG166
    //Le code établissement ne doit contenir que des chiifres
    //Paramètre : rien
    //Retour : rien
    CheckCode: function () {

        var code = JSIHelper.GetAttributeValue("new_code");
        if (code != null) {
            if (!JSIHelper.IsIntValue(code))
                Xrm.Page.getControl("new_code").setNotification(ESTABLISHMENT_CODE_ERROR_MESSAGE1, "ESTABLISHMENT_CODE_ERROR_MESSAGE1");
            else
                Xrm.Page.getControl("new_code").clearNotification("ESTABLISHMENT_CODE_ERROR_MESSAGE1");
        }
        else
            Xrm.Page.getControl("new_code").clearNotification("ESTABLISHMENT_CODE_ERROR_MESSAGE1");

    },




    //RG084
    //Alimenter le champ CDO par le CDO associé au distributeur
    //Paramètre : rien
    //Retour : rien
    SetCDO: function () {

        JSIHelper.GetParentLookup("new_distributorid", "ParentAccountId", "new_cdoid");

    },
    _namespace: true,

}
