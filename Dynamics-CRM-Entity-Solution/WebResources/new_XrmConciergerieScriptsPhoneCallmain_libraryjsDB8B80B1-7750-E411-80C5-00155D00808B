//Créateur : CC
//Date : 10/10/2014
//Fichier JS contenant les fonctionnalités permettant de gérer l'entité Appel téléphonique 

//On référence les bibliothèques nécessaires
/// <reference path="../Generics/global_variables.js" />

//On utilisera les namespaces pour avoir plus d'organisation dans le code
if (typeof (XrmConciergerie) == "undefined")
{ XrmConciergerie = { __namespace: true }; }
if (typeof (XrmConciergerie.Scripts) == "undefined")
{ XrmConciergerie.Scripts = { __namespace: true }; }

//On crée le namespace du fichier 
XrmConciergerie.Scripts.FormPhoneCall = {

    //Fonction qui sera appelé au chargement du formulaire
    Form_OnLoad: function ()
    {
        // RGI001
        JSIHelper.HackPhones();

        XrmConciergerie.Scripts.FormPhoneCall.ReadOnlyPhone();

        XrmConciergerie.Scripts.FormPhoneCall.FillWelcomeFrom();
    },


    //RGXXX
    // CCR - 10/10/2014 : Mettre le champ téléphone en mise à jour lorsque l'on est en modification
    //Parametre : rien
    //Retour : rien
    ReadOnlyPhone: function () {
        if (Xrm.Page.ui.getFormType() == FORM_TYPE_UPDATE) {
            Xrm.Page.getControl("phonenumber").setDisabled(true);
        }
    },

    //MANTIS XXX
    //
    FillWelcomeFrom: function () {
        if (Xrm.Page.ui.getFormType() == FORM_TYPE_UPDATE && Xrm.Page.getAttribute("new_iswelcomecall").getValue() && Xrm.Page.getAttribute("from").getValue().length == 0) {
   
   var partlistData = new Array();
   partlistData[0] = new Object();
   partlistData[0].id = Xrm.Page.context.getUserId();
   partlistData[0].name = Xrm.Page.context.getUserName();
   partlistData[0].entityType = "systemuser";
            Xrm.Page.getAttribute("from").setValue(partlistData);
        }
    },

    _namespace: true,

}
