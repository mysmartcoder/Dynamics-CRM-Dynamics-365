//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfTest.MutuaideService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MutuaideService.IMutuaideService")]
    public interface IMutuaideService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetEmailByExchangeId", ReplyAction="http://tempuri.org/IMutuaideService/GetEmailByExchangeIdResponse")]
        System.Xml.Linq.XElement GetEmailByExchangeId(string messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetEmailByExchangeId", ReplyAction="http://tempuri.org/IMutuaideService/GetEmailByExchangeIdResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetEmailByExchangeIdAsync(string messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/UpdateEmailByExchangeId", ReplyAction="http://tempuri.org/IMutuaideService/UpdateEmailByExchangeIdResponse")]
        System.Xml.Linq.XElement UpdateEmailByExchangeId(string messageId, string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/UpdateEmailByExchangeId", ReplyAction="http://tempuri.org/IMutuaideService/UpdateEmailByExchangeIdResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdateEmailByExchangeIdAsync(string messageId, string domainName, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetRequestByPhoneNumber", ReplyAction="http://tempuri.org/IMutuaideService/GetRequestByPhoneNumberResponse")]
        System.Xml.Linq.XElement GetRequestByPhoneNumber(string phoneNumber, string dialNumber, string phoneCallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetRequestByPhoneNumber", ReplyAction="http://tempuri.org/IMutuaideService/GetRequestByPhoneNumberResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetRequestByPhoneNumberAsync(string phoneNumber, string dialNumber, string phoneCallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/WelcomeCall", ReplyAction="http://tempuri.org/IMutuaideService/WelcomeCallResponse")]
        System.Xml.Linq.XElement WelcomeCall(string pcidssId, string callerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/WelcomeCall", ReplyAction="http://tempuri.org/IMutuaideService/WelcomeCallResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> WelcomeCallAsync(string pcidssId, string callerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetContractByBin", ReplyAction="http://tempuri.org/IMutuaideService/GetContractByBinResponse")]
        System.Xml.Linq.XElement GetContractByBin(int binCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetContractByBin", ReplyAction="http://tempuri.org/IMutuaideService/GetContractByBinResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetContractByBinAsync(int binCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/UpdateCustomerBin", ReplyAction="http://tempuri.org/IMutuaideService/UpdateCustomerBinResponse")]
        System.Xml.Linq.XElement UpdateCustomerBin(string pcidssId, string binCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/UpdateCustomerBin", ReplyAction="http://tempuri.org/IMutuaideService/UpdateCustomerBinResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdateCustomerBinAsync(string pcidssId, string binCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/UpdatePaymentMethod", ReplyAction="http://tempuri.org/IMutuaideService/UpdatePaymentMethodResponse")]
        System.Xml.Linq.XElement UpdatePaymentMethod(string demandeId, string paymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/UpdatePaymentMethod", ReplyAction="http://tempuri.org/IMutuaideService/UpdatePaymentMethodResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdatePaymentMethodAsync(string demandeId, string paymentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/RetrieveCustomer", ReplyAction="http://tempuri.org/IMutuaideService/RetrieveCustomerResponse")]
        System.Xml.Linq.XElement RetrieveCustomer(string lastName, string firstName, string birthday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/RetrieveCustomer", ReplyAction="http://tempuri.org/IMutuaideService/RetrieveCustomerResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> RetrieveCustomerAsync(string lastName, string firstName, string birthday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/IsCustomerActive", ReplyAction="http://tempuri.org/IMutuaideService/IsCustomerActiveResponse")]
        System.Xml.Linq.XElement IsCustomerActive(string pcidssId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/IsCustomerActive", ReplyAction="http://tempuri.org/IMutuaideService/IsCustomerActiveResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> IsCustomerActiveAsync(string pcidssId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetLastRequest", ReplyAction="http://tempuri.org/IMutuaideService/GetLastRequestResponse")]
        System.Xml.Linq.XElement GetLastRequest(string pcidssId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/GetLastRequest", ReplyAction="http://tempuri.org/IMutuaideService/GetLastRequestResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetLastRequestAsync(string pcidssId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/MailValidation", ReplyAction="http://tempuri.org/IMutuaideService/MailValidationResponse")]
        bool MailValidation(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMutuaideService/MailValidation", ReplyAction="http://tempuri.org/IMutuaideService/MailValidationResponse")]
        System.Threading.Tasks.Task<bool> MailValidationAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMutuaideServiceChannel : WcfTest.MutuaideService.IMutuaideService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MutuaideServiceClient : System.ServiceModel.ClientBase<WcfTest.MutuaideService.IMutuaideService>, WcfTest.MutuaideService.IMutuaideService {
        
        public MutuaideServiceClient() {
        }
        
        public MutuaideServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MutuaideServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MutuaideServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MutuaideServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.Linq.XElement GetEmailByExchangeId(string messageId) {
            return base.Channel.GetEmailByExchangeId(messageId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetEmailByExchangeIdAsync(string messageId) {
            return base.Channel.GetEmailByExchangeIdAsync(messageId);
        }
        
        public System.Xml.Linq.XElement UpdateEmailByExchangeId(string messageId, string domainName, string userName) {
            return base.Channel.UpdateEmailByExchangeId(messageId, domainName, userName);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdateEmailByExchangeIdAsync(string messageId, string domainName, string userName) {
            return base.Channel.UpdateEmailByExchangeIdAsync(messageId, domainName, userName);
        }
        
        public System.Xml.Linq.XElement GetRequestByPhoneNumber(string phoneNumber, string dialNumber, string phoneCallId) {
            return base.Channel.GetRequestByPhoneNumber(phoneNumber, dialNumber, phoneCallId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetRequestByPhoneNumberAsync(string phoneNumber, string dialNumber, string phoneCallId) {
            return base.Channel.GetRequestByPhoneNumberAsync(phoneNumber, dialNumber, phoneCallId);
        }
        
        public System.Xml.Linq.XElement WelcomeCall(string pcidssId, string callerId) {
            return base.Channel.WelcomeCall(pcidssId, callerId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> WelcomeCallAsync(string pcidssId, string callerId) {
            return base.Channel.WelcomeCallAsync(pcidssId, callerId);
        }
        
        public System.Xml.Linq.XElement GetContractByBin(int binCode) {
            return base.Channel.GetContractByBin(binCode);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetContractByBinAsync(int binCode) {
            return base.Channel.GetContractByBinAsync(binCode);
        }
        
        public System.Xml.Linq.XElement UpdateCustomerBin(string pcidssId, string binCode) {
            return base.Channel.UpdateCustomerBin(pcidssId, binCode);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdateCustomerBinAsync(string pcidssId, string binCode) {
            return base.Channel.UpdateCustomerBinAsync(pcidssId, binCode);
        }
        
        public System.Xml.Linq.XElement UpdatePaymentMethod(string demandeId, string paymentId) {
            return base.Channel.UpdatePaymentMethod(demandeId, paymentId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdatePaymentMethodAsync(string demandeId, string paymentId) {
            return base.Channel.UpdatePaymentMethodAsync(demandeId, paymentId);
        }
        
        public System.Xml.Linq.XElement RetrieveCustomer(string lastName, string firstName, string birthday) {
            return base.Channel.RetrieveCustomer(lastName, firstName, birthday);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> RetrieveCustomerAsync(string lastName, string firstName, string birthday) {
            return base.Channel.RetrieveCustomerAsync(lastName, firstName, birthday);
        }
        
        public System.Xml.Linq.XElement IsCustomerActive(string pcidssId) {
            return base.Channel.IsCustomerActive(pcidssId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> IsCustomerActiveAsync(string pcidssId) {
            return base.Channel.IsCustomerActiveAsync(pcidssId);
        }
        
        public System.Xml.Linq.XElement GetLastRequest(string pcidssId) {
            return base.Channel.GetLastRequest(pcidssId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetLastRequestAsync(string pcidssId) {
            return base.Channel.GetLastRequestAsync(pcidssId);
        }
        
        public bool MailValidation(string email) {
            return base.Channel.MailValidation(email);
        }
        
        public System.Threading.Tasks.Task<bool> MailValidationAsync(string email) {
            return base.Channel.MailValidationAsync(email);
        }
    }
}
